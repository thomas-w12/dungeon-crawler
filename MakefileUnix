CC = gcc
CFLAGS = -g -Wall -Wshadow -Wextra -I./include
EXE = dungeon_crawler

SRCDIR = src
TESTDIR = tests
OBJDIR = build
SRCS = $(wildcard $(SRCDIR)/*.c)
TEST_SRCS = $(wildcard $(TESTDIR)/*.c)
OBJS = $(filter-out $(OBJDIR)/main.o, $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(SRCS)))
TEST_OBJS = $(patsubst $(TESTDIR)/%.c, $(OBJDIR)/%.o, $(TEST_SRCS))

VPATH = $(SRCDIR) $(TESTDIR)

all: $(EXE)

$(EXE): $(OBJS) $(OBJDIR)/main.o
	$(CC) $(CFLAGS) $(OBJS) $(OBJDIR)/main.o -o $(EXE)

$(OBJDIR)/%.o: %.c | $(OBJDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR):
	mkdir -p $(OBJDIR)

player_test: $(OBJDIR)/player_test.o $(OBJS)
	$(CC) $(CFLAGS) $(OBJDIR)/player_test.o $(OBJS) -o $(OBJDIR)/player_test_runner
	$(OBJDIR)/player_test_runner

sample_test: $(OBJDIR)/sample_test.o $(OBJS)
	$(CC) $(CFLAGS) $(OBJDIR)/sample_test.o $(OBJS) -o $(OBJDIR)/sample_test_runner
	$(OBJDIR)/sample_test_runner

test: player_test sample_test

valgrind: $(EXE)
	valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes ./$(EXE)
	
clean:
	rm -rf $(EXE) $(OBJDIR)

run:
	./$(EXE)